{"version":3,"sources":["components/contacts.js","components/AutoSuggest.js","App.js","serviceWorker.js","index.js","App.module.css"],"names":["Contacts","contacts","web_name","displayUrl","snippet","item","i","length","push","className","href","style","color","AutoSuggest","suggestWord","console","log","App","state","word","detail","images","searchKey","count","offset","idsi","searchSuggestionsArray","handleClick","e","target","id","setState","parseInt","tempID","onWordSubmit","tempSuggArr","require","request","method","url","qs","q","this","headers","Connection","Host","Accept","error","response","body","Error","apiBody","JSON","parse","suggestCount","suggestionGroups","searchSuggestions","displayText","bind","name","value","componentDidMount","tempArray","tempName","tempDispUrl_arr","tempSnip_arr","webLeng","webPages","temp_web","temp_web_name","temp_disp_url","temp_snip","preventDefault","src","width","height","mode","alt","onSubmit","type","placeholder","onChange","onWordChange","styles","pagination","app","active","onClick","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.387c841e.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n    const Contacts = ({ contacts,web_name,displayUrl,snippet}) => {\r\n\r\n      \r\n      const item =[]\r\n\r\n      for (let i = 0; i < contacts.length; i++) {\r\n       \r\n        item.push(\r\n        <div className=\"container\">\r\n              <div className=\"card-body\">\r\n                            <a href={contacts[i]} >{web_name[i]}</a>\r\n                            <p style={{ color: 'green' }}>{displayUrl[i]}</p>\r\n                            <p>{snippet[i]}</p>\r\n     \r\n              </div>\r\n        \r\n        </div>)\r\n      }\r\n     \r\n      return (\r\n        <div>\r\n          \r\n            {item}\r\n          \r\n        </div>\r\n      )\r\n    };\r\n\r\n    export default Contacts;\r\n    /*\r\n    <h6 className=\"card-subtitle mb-2 text-muted\">{contacts}</h6>\r\n                <p className=\"card-text\">{contacts}</p>\r\n                */","import React from 'react'\r\n\r\n    const AutoSuggest = ({ suggestWord}) => {\r\n\r\n      console.log(suggestWord)\r\n      \r\n      const item =[]\r\n\r\n      for (let i = 0; i < suggestWord.length; i++) {\r\n       \r\n        item.push(\r\n        <div className=\"container\">\r\n              <h6>{suggestWord[i]}</h6>\r\n        </div>)\r\n      }\r\n    \r\n      return (\r\n        <div>\r\n          \r\n            {item}\r\n          \r\n        </div>\r\n      )\r\n    };\r\n\r\n    export default AutoSuggest;\r\n   ","import React , {Component} from 'react';\nimport './App.css';\nimport Contacts from \"./components/contacts\"\nimport styles from \"../src/App.module.css\"\nimport AutoSuggest from \"./components/AutoSuggest\"\n\nclass App extends Component {\n\n  state = {\n    word : \"\",\n    contacts: [],\n    detail : [],\n    images : [],\n    searchKey : \"\",\n    web_name : [],\n    displayUrl : [],\n    snippet : [],\n    count : 10,\n    offset : 0,\n    idsi : 1,\n    searchSuggestionsArray : [],\n  }\n \n  componentDidMount (e) {\n         let tempSuggArr = [];\n    var request = require(\"request\");\n\n    var options = { method: 'GET',\n      url: 'https://api.cognitive.microsoft.com/bing/v7.0/suggestions',\n      qs: { q : this.state.searchKey},\n      headers: \n       { 'cache-control': 'no-cache',\n         Connection: 'keep-alive',\n         'Accept-Encoding': 'gzip, deflate',\n         Host: 'api.cognitive.microsoft.com',\n         'Postman-Token': 'd52df569-1084-4f77-9558-4cf6bb39ed77,d4b84bf5-23fc-4fde-b34e-fffb4d304830',\n         'Cache-Control': 'no-cache',\n         Accept: '*/*',\n         'User-Agent': 'PostmanRuntime/7.15.2',\n         'Ocp-Apim-Subscription-Key': 'f873c9adcaa94d18ad0778c5f2ff222b' } };\n    \n    request(options, function (error, response, body) {\n      \n      if (error) throw new Error(error);\n    \n     \n        //console.log(\"ilk parse\")\n\n        let apiBody = JSON.parse(body);\n        console.log(apiBody)\n\n        let suggestCount = apiBody.suggestionGroups[0].searchSuggestions.length;\n        console.log(suggestCount)\n\n        if(suggestCount === 0){\n          console.log(\"bos sugg\")\n          this.setState({ searchSuggestionsArray: tempSuggArr})\n        }\n        else{\n          for (let i = 0; i < suggestCount; i++) {\n\n            tempSuggArr.push(apiBody.suggestionGroups[0].searchSuggestions[i].displayText)\n            \n              }\n  \n              this.setState({ searchSuggestionsArray: tempSuggArr})\n        }\n        \n         \n    }.bind(this));\n\n\n\n}\n\n\n handleClick = (e) => {\n\n  if(e.target.id === 1){\n\n    this.setState({\n      offset : 0\n    });\n\n\n    console.log(\"zaten 1\")\n  } else{\n\n    this.setState({\n      idsi : parseInt(e.target.id)\n  });\n\nvar tempID =  this.state.idsi;\n\nthis.setState({\n  offset : parseInt(tempID *10)\n});\n\nthis.onWordSubmit(e);\n\n\n  }\n      \n      \n  console.log(this.state.offset)\n}\n  \n\nonWordChange(e){\n\n  \n    this.setState({\n        [e.target.name] : e.target.value\n    });\n\n    this.componentDidMount();\n}\nonWordSubmit(e){\n\n  console.log(\"is aaaaaaaaaa\")\n    \n    let tempArray = [];\n    let tempName = [];\n    let tempDispUrl_arr = [];\n    let tempSnip_arr = [];\n    \n   \n            var request = require(\"request\");\n\n            var options = { method: 'GET',\n              url: 'https://api.cognitive.microsoft.com/bing/v7.0/search',\n              qs: { \n                q : this.state.searchKey,\n                count : this.state.count,\n                offset : this.state.offset},\n              headers: \n               { 'cache-control': 'no-cache',\n                 Connection: 'keep-alive',\n                 'Accept-Encoding': 'gzip, deflate',\n                 Host: 'api.cognitive.microsoft.com',\n                 'Postman-Token': 'd52df569-1084-4f77-9558-4cf6bb39ed77,d4b84bf5-23fc-4fde-b34e-fffb4d304830',\n                 'Cache-Control': 'no-cache',\n                 Accept: '*/*',\n                 'User-Agent': 'PostmanRuntime/7.15.2',\n                 'Ocp-Apim-Subscription-Key': 'f873c9adcaa94d18ad0778c5f2ff222b' } };\n            \n            request(options, function (error, response, body) {\n              \n              if (error) throw new Error(error);\n            \n              if(!this.state.searchKey){\n                  console.log(\"\")\n              } else {\n\n                //console.log(\"ilk parse\")\n\n                let apiBody = JSON.parse(body);\n                //console.log(response)\n\n              let webLeng = apiBody.webPages.value.length;\n\n              \n              for (let i = 0; i < webLeng; i++) {\n                    let temp_web = apiBody.webPages.value[i].url;\n                    let temp_web_name = apiBody.webPages.value[i].name;\n                    let temp_disp_url = apiBody.webPages.value[i].displayUrl;\n                    let temp_snip = apiBody.webPages.value[i].snippet;\n\n                    tempArray.push(temp_web);\n                    tempName.push(temp_web_name);\n                    tempDispUrl_arr.push(temp_disp_url);\n                    tempSnip_arr.push(temp_snip);\n\n\n                  }\n\n            /*\n            let imageLeng = apiBody.images.value.length;\n\n              for (let i = 0; i < imageLeng; i++) {\n                    let temp_img = apiBody.images.value[i].hostPageUrl;\n                    tempArray.push(temp_img);\n                }*/ \n                  this.setState({ contacts: tempArray})\n                  this.setState({ web_name: tempName})\n                  this.setState({ displayUrl: tempDispUrl_arr})\n                  this.setState({ snippet: tempSnip_arr})\n\n\n\n              }\n              \n                 \n            }.bind(this));\n\n    \n    e.preventDefault();\n}\n\n  render() {\n\n\n    const {searchKey} = this.state;\n    const {searchSuggestionsArray} = this.state;\n    console.log(searchKey)\n    console.log(searchSuggestionsArray)\n    \n    return (\n      <div className=\"container\">\n          <div>\n                <center >\n                    <img src=\"https://s2.turkcell.com.tr/SiteAssets/Bireysel/Servis/render/gorseller/yaani_4/yaani_4_305x229.png\" width={120} height={100} mode='fit'alt=\"new\"></img>\n                    <h4>Yaani Search Page</h4>\n                </center>\n          </div>\n               \n                <div>\n                    <form onSubmit = {this.onWordSubmit.bind(this)}>\n                        <div className = \"form-group\">\n                            \n                            <input\n                                type = \"text\"\n                                name = \"searchKey\"\n                                id = \"name\"\n                                placeholder = \"Please enter search key\"\n                                className = \"form-control\"\n                                value = {searchKey}\n                                onChange = {e =>{this.onWordChange(e);\n                                              this.componentDidMount(e)}\n                                }\n                                \n                                \n                            />\n                            <AutoSuggest suggestWord={this.state.searchSuggestionsArray}></AutoSuggest>\n                            \n                        </div>\n                        \n                        <button type = \"submit\" className = \"btn btn-danger\">Search</button>\n\n                    </form>\n                    </div>\n                    <Contacts contacts={this.state.contacts} web_name={this.state.web_name} displayUrl={this.state.displayUrl} snippet={this.state.snippet}/>\n\n                    <div className={styles.pagination}>\n                    <div className={styles.app}>\n\n\n        <div className={styles.pagination}>\n          <span>&laquo;</span>\n          <span id={1} className={styles.active} onClick={this.onWordSubmit}>1</span>\n          <span id={2} onClick={this.handleClick}>2</span>\n          <span id={3} onClick={this.handleClick}>3</span>\n          <span id={4} onClick={this.handleClick}>4</span>\n        </div>\n\n      </div>\n        </div>\n        \n      </div>\n      \n    )\n  }\n}\n\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__2g1Xd\",\"pagination\":\"App_pagination__1K24I\",\"active\":\"App_active__15XQr\"};"],"sourceRoot":""}